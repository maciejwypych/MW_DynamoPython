<Workspace Version="1.3.3.4111" X="-1805.18771531197" Y="434.585440109303" zoom="0.687417683139942" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.ZeroTouch.DSFunction guid="76a56f83-f09f-4949-b1aa-d84e364a8df3" type="Dynamo.Graph.Nodes.ZeroTouch.DSFunction" nickname="Flatten" x="4505.2898610293" y="-157.687837587144" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false" assembly="BuiltIn" function="Flatten@var[]..[]">
      <PortInfo index="0" default="False" useLevels="True" level="3" shouldKeepListStructure="False" />
    </Dynamo.Graph.Nodes.ZeroTouch.DSFunction>
    <PythonNodeModels.PythonNode guid="3af41d03-9a5c-4570-848c-c09a117f4013" type="PythonNodeModels.PythonNode" nickname="Python Script" x="3324.92339064415" y="-104.514281477835" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

#Import DocumentManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

#Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk

#Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
from Autodesk.Revit.DB import *
from Autodesk.Revit.Creation import *
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

views = UnwrapElement(IN[0])
doc = DocumentManager.Instance.CurrentDBDocument
stairswithpathlst = list()
stairslst = list()

# collect existing stairpaths in ActiveView
for v in views:
	collpath = FilteredElementCollector(doc, v.Id)
	filtpath = ElementCategoryFilter(BuiltInCategory.OST_StairsPaths)
	stairpaths = collpath.WherePasses(filtpath).ToElements()
	stairswithpath = []
	# get stairs from stair path
	for i in stairpaths:
		hoststair = (i.StairsId)
		stairid	= hoststair.HostElementId
		stairelem = doc.GetElement(stairid).ToDSType(True)	
		stairswithpath.append(stairelem)
		
	# collect stairs in ActiveView
	collstair = FilteredElementCollector(doc, v.Id)
	filtstair = ElementCategoryFilter(BuiltInCategory.OST_Stairs)
	stairs = collstair.WherePasses(filtstair).ToElements()
	
	stairswithpathlst.append(stairswithpath)
	stairslst.append(stairs)

OUT = stairslst, stairswithpathlst</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="37fad5db-0e3f-4806-806e-ad77933f2e65" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="3596.91087820322" y="-108.108949048583" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" CodeText="out[0];&#xA;out[1];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="a0375743-dd26-4777-b6fb-549627c9f777" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="4992.00304317397" y="-114.579164079319" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="stair_paths;" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <PythonNodeModels.PythonNode guid="e4451340-c894-4e57-8f96-bef0c79c3a19" type="PythonNodeModels.PythonNode" nickname="Create Paths" x="4779.80742616908" y="-210.638050642776" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

#Import DocumentManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

#Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk

#Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
from Autodesk.Revit.DB import *
from Autodesk.Revit.Creation import *
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

import sys
#Specify location path for IronPython install
pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib'
sys.path.append(pyt_path)


doc = DocumentManager.Instance.CurrentDBDocument
uidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument
def ProcessList(_func, _list):
    return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )

def UnwrapNestedList(e):
	return UnwrapElement(e)
	
if isinstance(IN[0], list):
	stairs = ProcessList(UnwrapNestedList, IN[0])
else:
	stairs = [UnwrapElement(IN[0])]
if isinstance(IN[1], list):
	views = ProcessList(UnwrapNestedList, IN[1])
else:
	views = [UnwrapElement(IN[1])]	

typelist = list()

newpathslst = list()
TransactionManager.Instance.EnsureInTransaction(doc)


#find stairpathtype
collpathtype = FilteredElementCollector(doc)
filtpathtype = ElementCategoryFilter(BuiltInCategory.OST_StairsPaths)
stairpathtypes = collpathtype.WherePasses(filtpathtype).ToElements()

for stairpathtype in stairpathtypes:
	istype = stairpathtype.ToString()
	if istype == "Autodesk.Revit.DB.Architecture.StairsPathType":
		typelist.append(stairpathtype)

stairpathtype = typelist[0]
pathid = stairpathtype.Id

for v in views:
#create stair path for stair runs
	try:
		for st in stairs:
			newpaths = list()
			for stair in st:
				stairid = LinkElementId(stair.Id)
				newpath = Autodesk.Revit.DB.Architecture.StairsPath.Create(doc, stairid, pathid, v.Id)
				newpaths.append(newpath)
		newpathslst.append(newpaths)
	except:
		import traceback
		errorReport = traceback.format_exc()

TransactionManager.Instance.TransactionTaskDone()

doc.Regenerate()
uidoc.RefreshActiveView()

OUT = newpaths

</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="47aab18a-c8f1-46a1-8841-dcfef8794d0c" type="PythonNodeModels.PythonNode" nickname="Python Script" x="3829.95606724411" y="-115.64715705834" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>listA = IN[0]
listB = IN[1]
unmatched = []

#listC = [x for x in listA if x not in listB]
for x in range(len(listA)):
#	s = set(listA)
	if listA[x] in listB:
		listB.remove(listA[x])
	else:
		unmatched.append(listA[x])

OUT = [listB, unmatched]</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="2c07f630-4715-4983-ad63-f5914c317403" type="PythonNodeModels.PythonNode" nickname="Python Script" x="2889.91019756479" y="-598.46099351686" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <Script>#Copyright(c) 2016, Dimitar Venkov
# @5devene, dimitar.ven@gmail.com

import clr

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
doc = DocumentManager.Instance.CurrentDBDocument

clr.AddReference("RevitAPI")
from Autodesk.Revit.DB import *

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

def tolist(obj1):
	if hasattr(obj1,"__iter__"): return obj1
	else: return [obj1]

fn = map(str,tolist(IN[0]) )
IncSchedules = IN[1]
result, similar, names = [], [], []

if IncSchedules: exclude = ("DrawingSheet")
else: exclude = ("DrawingSheet", "Schedule")
fec = FilteredElementCollector(doc).OfClass(ViewPlan)
for i in fec:
	if not i.IsTemplate and not i.ViewType.ToString() in exclude:
		n1 = i.ViewName
		names.append(n1)
		if any(fn1 == n1 for fn1 in fn):
			result.append(i.ToDSType(True))
		elif any(fn1.lower() in n1.lower() for fn1 in fn):
			similar.append(i.ToDSType(True))
if len(result) &gt; 0:
	OUT = result,similar
if len(result) == 0 and len(similar) &gt; 0:
	OUT = "No exact match found. Check partial below:", similar
if len(result) == 0 and len(similar) == 0:
	OUT = "No match found! Check names below:", names</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="53b58fe5-f311-4fcf-9fc9-00d794a483c4" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2654.35597187845" y="-430.092645988491" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="false;&#xA;true;" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="e6c90ac2-1f90-44ac-a457-0fa43edf1e6a" type="PythonNodeModels.PythonNode" nickname="Python Script" x="2824.89871678376" y="-151.979035029098" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>#Copyright(c) 2014, Nathan Miller
# The Proving Ground, http://theprovingground.org

import clr

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

#The input to this node will be stored in the IN[0] variable.

doc =  DocumentManager.Instance.CurrentDBDocument

toggle = IN[0]
schemeName = IN[1]

output = []
views = []
names = []
elementids = []
uniqueids = []

if toggle == True:

	collector = FilteredElementCollector(doc)
	collector.OfCategory(BuiltInCategory.OST_Views)
	collector.OfClass(View)
 
	famtypeitr = collector.GetElementIdIterator()
	famtypeitr.Reset()

	for item in famtypeitr:
		famtypeID = item
		faminst = doc.GetElement(famtypeID)
		
		if faminst.ViewType == ViewType.AreaPlan:
			if (faminst.AreaScheme.Name == schemeName):
				view = faminst
				name = faminst.Name
				elementid = faminst.Id
				uniqueid = faminst.UniqueId
				
				views.append(view)
				names.append(name)
				elementids.append(elementid)
				uniqueids.append(uniqueid)
			if (schemeName == "*"):
				view = faminst
				name = faminst.Name
				elementid = faminst.Id
				uniqueid = faminst.UniqueId
				
				views.append(view)
				names.append(name)
				elementids.append(elementid)
				uniqueids.append(uniqueid)
        
	output.append(views)
	output.append(names)
	output.append(elementids)
	output.append(uniqueids)
        
#Assign your output to the OUT variable
OUT = output</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="9c95a368-2a7e-4903-b2e9-d9e92ed817b0" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2636.94889405374" y="-107.474447026869" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="true;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="b1dc4478-098b-4383-bb76-b99edd3a4de2" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2624" y="-183" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="&quot;*&quot;;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="7fcbbbf4-71f6-4420-adfc-2bb5123f96bb" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="3275.57046923867" y="-429.158599187915" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="views;" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="7f086d91-88fd-4799-9384-50ddf0c80463" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2631" y="-604" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="&quot;FIRE RATING PLAN LEVEL&quot;;" ShouldFocus="false" />
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="e435e5f1-b696-42ce-a83e-1ce994a89784" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="3112.90054088087" y="-568.285696540963" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="views[1];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="d5cda2b6-4de8-444e-8871-38b51e6c3096" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="3031.69028630079" y="-118.435108544661" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="areaplans[0];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="af07d021-3975-45c7-b65b-d33a6ec3270e" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="2630" y="-507" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="" ShouldFocus="false" />
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="76a56f83-f09f-4949-b1aa-d84e364a8df3" start_index="0" end="e4451340-c894-4e57-8f96-bef0c79c3a19" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="3af41d03-9a5c-4570-848c-c09a117f4013" start_index="0" end="37fad5db-0e3f-4806-806e-ad77933f2e65" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="37fad5db-0e3f-4806-806e-ad77933f2e65" start_index="0" end="47aab18a-c8f1-46a1-8841-dcfef8794d0c" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="37fad5db-0e3f-4806-806e-ad77933f2e65" start_index="1" end="47aab18a-c8f1-46a1-8841-dcfef8794d0c" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e4451340-c894-4e57-8f96-bef0c79c3a19" start_index="0" end="a0375743-dd26-4777-b6fb-549627c9f777" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="47aab18a-c8f1-46a1-8841-dcfef8794d0c" start_index="0" end="76a56f83-f09f-4949-b1aa-d84e364a8df3" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="2c07f630-4715-4983-ad63-f5914c317403" start_index="0" end="e435e5f1-b696-42ce-a83e-1ce994a89784" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="53b58fe5-f311-4fcf-9fc9-00d794a483c4" start_index="0" end="2c07f630-4715-4983-ad63-f5914c317403" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="53b58fe5-f311-4fcf-9fc9-00d794a483c4" start_index="1" end="2c07f630-4715-4983-ad63-f5914c317403" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e6c90ac2-1f90-44ac-a457-0fa43edf1e6a" start_index="0" end="d5cda2b6-4de8-444e-8871-38b51e6c3096" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9c95a368-2a7e-4903-b2e9-d9e92ed817b0" start_index="0" end="e6c90ac2-1f90-44ac-a457-0fa43edf1e6a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b1dc4478-098b-4383-bb76-b99edd3a4de2" start_index="0" end="e6c90ac2-1f90-44ac-a457-0fa43edf1e6a" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7fcbbbf4-71f6-4420-adfc-2bb5123f96bb" start_index="0" end="3af41d03-9a5c-4570-848c-c09a117f4013" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7fcbbbf4-71f6-4420-adfc-2bb5123f96bb" start_index="0" end="e4451340-c894-4e57-8f96-bef0c79c3a19" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7f086d91-88fd-4799-9384-50ddf0c80463" start_index="0" end="2c07f630-4715-4983-ad63-f5914c317403" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e435e5f1-b696-42ce-a83e-1ce994a89784" start_index="0" end="7fcbbbf4-71f6-4420-adfc-2bb5123f96bb" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="1f00d307-47c3-4a04-9d46-c27fa365cae2" annotationText="Create Stair Paths" left="3314.92339064415" top="-256.638050642776" width="1894.07965252982" height="245.123769164941" fontSize="30" InitialTop="-210.638050642776" InitialHeight="135.694639717952" TextblockHeight="36" backgrouund="#FFC1D676">
      <Models ModelGuid="76a56f83-f09f-4949-b1aa-d84e364a8df3" />
      <Models ModelGuid="3af41d03-9a5c-4570-848c-c09a117f4013" />
      <Models ModelGuid="37fad5db-0e3f-4806-806e-ad77933f2e65" />
      <Models ModelGuid="a0375743-dd26-4777-b6fb-549627c9f777" />
      <Models ModelGuid="e4451340-c894-4e57-8f96-bef0c79c3a19" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>